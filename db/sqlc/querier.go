// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"
)

type Querier interface {
	DeleteAdminUser(ctx context.Context, email string) (AdminUser, error)
	DeleteAuthorizationRole(ctx context.Context, roleID int64) (AuthorizationRole, error)
	DeleteAuthorizationRule(ctx context.Context, ruleID int64) (AuthorizationRule, error)
	DeleteRefreshToken(ctx context.Context, customerID int64) (RefreshToken, error)
	GetAdminUser(ctx context.Context, email string) (AdminUser, error)
	GetAuthorizationRole(ctx context.Context, roleID int64) (AuthorizationRole, error)
	GetAuthorizationRule(ctx context.Context, ruleID int64) (AuthorizationRule, error)
	GetAuthorizationRuleByRole(ctx context.Context, roleID int64) ([]AuthorizationRule, error)
	GetCustomer(ctx context.Context, email string) (Customer, error)
	GetRefreshToken(ctx context.Context, customerID int64) (RefreshToken, error)
	InsertAdminUser(ctx context.Context, arg *InsertAdminUserParams) (AdminUser, error)
	InsertAuthorizationRole(ctx context.Context, arg *InsertAuthorizationRoleParams) (AuthorizationRole, error)
	InsertAuthorizationRule(ctx context.Context, arg *InsertAuthorizationRuleParams) (AuthorizationRule, error)
	InsertCustomer(ctx context.Context, arg *InsertCustomerParams) (Customer, error)
	InsertMultipleAuthorizationRules(ctx context.Context, arg *InsertMultipleAuthorizationRulesParams) ([]AuthorizationRule, error)
	InsertRefreshToken(ctx context.Context, arg *InsertRefreshTokenParams) (RefreshToken, error)
	IsAllowed(ctx context.Context, arg *IsAllowedParams) (bool, error)
	UpdateAdminUser(ctx context.Context, arg *UpdateAdminUserParams) (AdminUser, error)
	UpdateAuthorizationRole(ctx context.Context, arg *UpdateAuthorizationRoleParams) (AuthorizationRole, error)
	UpdateAuthorizationRule(ctx context.Context, arg *UpdateAuthorizationRuleParams) (AuthorizationRule, error)
	UpdateCustomer(ctx context.Context, arg *UpdateCustomerParams) (Customer, error)
	UpdateRefreshToken(ctx context.Context, arg *UpdateRefreshTokenParams) (RefreshToken, error)
}

var _ Querier = (*Queries)(nil)
